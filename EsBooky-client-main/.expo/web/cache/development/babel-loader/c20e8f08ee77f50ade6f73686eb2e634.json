{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar initialUser = {};\n\nfunction user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUser;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER_INFO\":\n      return action.user;\n\n    default:\n      return state;\n  }\n}\n\nvar initialLogin = false;\n\nfunction login() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialLogin;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_LOGIN_TRUE\":\n      return true;\n\n    default:\n      return state;\n  }\n}\n\nvar initialId = null;\n\nfunction selected_id() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialId;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_ROOM_ID\":\n      return action.id;\n\n    default:\n      return state;\n  }\n}\n\nvar initialRooms = [];\n\nfunction rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRooms;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_GENRE\":\n      state.selected_genre = action.genre;\n      return state;\n\n    case \"FETCH_ROOMS\":\n      state.rooms = action.list;\n      return state;\n\n    case \"ADD_SAVED_LIST\":\n      if (!state.user.fav_list.includes(action.roomId)) {\n        var newList = [].concat(_toConsumableArray(state.user.fav_list), [action.roomId]);\n        state.user.fav_list = newList;\n      }\n\n      return state;\n\n    case \"ADD_COMPLETED_LIST\":\n      if (!state.user.completed_list.includes(action.roomId)) {\n        var _newList = [].concat(_toConsumableArray(state.user.completed_list), [action.roomId]);\n\n        state.user.completed_list = _newList;\n      }\n\n      return state;\n\n    case \"DELETE_FROM_SAVED\":\n      var indexSav = state.user.fav_list.indexOf(action.roomId);\n      state.user.fav_list.splice(indexSav, indexSav + 1);\n      return state;\n\n    case \"DELETE_FROM_COMPLETED\":\n      var indexComp = state.user.completed_list.indexOf(action.roomId);\n      state.user.completed_list.fav_list.splice(indexComp, indexComp + 1);\n      return state;\n\n    case \"SET_LOGIN_TRUE\":\n      state.login = true;\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducers;","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/reducers.js"],"names":["initialUser","user","state","action","type","initialLogin","login","initialId","selected_id","id","initialRooms","rooms","selected_genre","genre","list","fav_list","includes","roomId","newList","completed_list","indexSav","indexOf","splice","indexComp","reducers"],"mappings":";AAAA,IAAMA,WAAW,GAAG,EAApB;;AACA,SAASC,IAAT,GAA2C;AAAA,MAA7BC,KAA6B,uEAArBF,WAAqB;AAAA,MAARG,MAAQ;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,eAAL;AACC,aAAOD,MAAM,CAACF,IAAd;;AACD;AACC,aAAOC,KAAP;AAJF;AAMA;;AACD,IAAMG,YAAY,GAAG,KAArB;;AACA,SAASC,KAAT,GAA6C;AAAA,MAA9BJ,KAA8B,uEAAtBG,YAAsB;AAAA,MAARF,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACC,aAAO,IAAP;;AACD;AACC,aAAOF,KAAP;AAJF;AAMA;;AACD,IAAMK,SAAS,GAAG,IAAlB;;AACA,SAASC,WAAT,GAAgD;AAAA,MAA3BN,KAA2B,uEAAnBK,SAAmB;AAAA,MAARJ,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACC,aAAOD,MAAM,CAACM,EAAd;;AACD;AACC,aAAOP,KAAP;AAJF;AAMA;;AACD,IAAMQ,YAAY,GAAG,EAArB;;AACA,SAASC,KAAT,GAA6C;AAAA,MAA9BT,KAA8B,uEAAtBQ,YAAsB;AAAA,MAARP,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,cAAL;AACCF,MAAAA,KAAK,CAACU,cAAN,GAAuBT,MAAM,CAACU,KAA9B;AACA,aAAOX,KAAP;;AACD,SAAK,aAAL;AACCA,MAAAA,KAAK,CAACS,KAAN,GAAcR,MAAM,CAACW,IAArB;AACA,aAAOZ,KAAP;;AAED,SAAK,gBAAL;AACC,UAAI,CAACA,KAAK,CAACD,IAAN,CAAWc,QAAX,CAAoBC,QAApB,CAA6Bb,MAAM,CAACc,MAApC,CAAL,EAAkD;AACjD,YAAMC,OAAO,gCAAOhB,KAAK,CAACD,IAAN,CAAWc,QAAlB,IAA4BZ,MAAM,CAACc,MAAnC,EAAb;AACAf,QAAAA,KAAK,CAACD,IAAN,CAAWc,QAAX,GAAsBG,OAAtB;AACA;;AACD,aAAOhB,KAAP;;AAED,SAAK,oBAAL;AAIC,UAAI,CAACA,KAAK,CAACD,IAAN,CAAWkB,cAAX,CAA0BH,QAA1B,CAAmCb,MAAM,CAACc,MAA1C,CAAL,EAAwD;AACvD,YAAMC,QAAO,gCAAOhB,KAAK,CAACD,IAAN,CAAWkB,cAAlB,IAAkChB,MAAM,CAACc,MAAzC,EAAb;;AACAf,QAAAA,KAAK,CAACD,IAAN,CAAWkB,cAAX,GAA4BD,QAA5B;AACA;;AAED,aAAOhB,KAAP;;AAED,SAAK,mBAAL;AACC,UAAMkB,QAAQ,GAAGlB,KAAK,CAACD,IAAN,CAAWc,QAAX,CAAoBM,OAApB,CAA4BlB,MAAM,CAACc,MAAnC,CAAjB;AACAf,MAAAA,KAAK,CAACD,IAAN,CAAWc,QAAX,CAAoBO,MAApB,CAA2BF,QAA3B,EAAqCA,QAAQ,GAAG,CAAhD;AACA,aAAOlB,KAAP;;AAED,SAAK,uBAAL;AACC,UAAMqB,SAAS,GAAGrB,KAAK,CAACD,IAAN,CAAWkB,cAAX,CAA0BE,OAA1B,CAAkClB,MAAM,CAACc,MAAzC,CAAlB;AACAf,MAAAA,KAAK,CAACD,IAAN,CAAWkB,cAAX,CAA0BJ,QAA1B,CAAmCO,MAAnC,CAA0CC,SAA1C,EAAqDA,SAAS,GAAG,CAAjE;AACA,aAAOrB,KAAP;;AAED,SAAK,gBAAL;AACCA,MAAAA,KAAK,CAACI,KAAN,GAAc,IAAd;AACA,aAAOJ,KAAP;;AAED;AACC,aAAOA,KAAP;AAzCF;AA2CA;;AAED,eAAesB,QAAf","sourcesContent":["const initialUser = {};\nfunction user(state = initialUser, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_USER_INFO\":\n\t\t\treturn action.user;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialLogin = false;\nfunction login(state = initialLogin, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_LOGIN_TRUE\":\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialId = null;\nfunction selected_id(state = initialId, action) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_ROOM_ID\":\n\t\t\treturn action.id;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialRooms = [];\nfunction rooms(state = initialRooms, action) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_GENRE\":\n\t\t\tstate.selected_genre = action.genre;\n\t\t\treturn state;\n\t\tcase \"FETCH_ROOMS\":\n\t\t\tstate.rooms = action.list;\n\t\t\treturn state;\n\n\t\tcase \"ADD_SAVED_LIST\":\n\t\t\tif (!state.user.fav_list.includes(action.roomId)) {\n\t\t\t\tconst newList = [...state.user.fav_list, action.roomId];\n\t\t\t\tstate.user.fav_list = newList;\n\t\t\t}\n\t\t\treturn state;\n\n\t\tcase \"ADD_COMPLETED_LIST\":\n\t\t\t// if (!state.user.completed_list.includes(action.roomId)) {\n\t\t\t// \tstate.user.completed_list.push(action.roomId);\n\t\t\t// }\n\t\t\tif (!state.user.completed_list.includes(action.roomId)) {\n\t\t\t\tconst newList = [...state.user.completed_list, action.roomId];\n\t\t\t\tstate.user.completed_list = newList;\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\tcase \"DELETE_FROM_SAVED\":\n\t\t\tconst indexSav = state.user.fav_list.indexOf(action.roomId);\n\t\t\tstate.user.fav_list.splice(indexSav, indexSav + 1);\n\t\t\treturn state;\n\n\t\tcase \"DELETE_FROM_COMPLETED\":\n\t\t\tconst indexComp = state.user.completed_list.indexOf(action.roomId);\n\t\t\tstate.user.completed_list.fav_list.splice(indexComp, indexComp + 1);\n\t\t\treturn state;\n\n\t\tcase \"SET_LOGIN_TRUE\":\n\t\t\tstate.login = true;\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducers;\n\n// Separar states seg√∫n DB\n// Combine reducers\n// redux thunk\n"]},"metadata":{},"sourceType":"module"}