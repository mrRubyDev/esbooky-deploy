{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { SearchBar } from \"react-native-elements\";\nimport { select_id, select_genre, fetch_rooms } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GlobalTitles from \"../components/global-titles\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { getRooms, getGenre } from \"../../apiService\";\nvar Stack = createStackNavigator();\nvar TITLES = [\"Let's find your next adventure 🤟🏼\", \"Are you ready for the action? 🕵🏽 \", \"Find the best escapes in town 🔝🔝\"];\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\n\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreFilter = _useState2[0],\n      setGenreFilter = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  useEffect(function () {\n    getRooms().then(function (rooms) {\n      return setRooms(rooms);\n    });\n    dispatch(fetch_rooms(rooms));\n  }, []);\n\n  var selectRoomHandler = function selectRoomHandler(id) {\n    dispatch(select_id(id));\n    navigation.navigate(\"roomDetails\");\n  };\n\n  var selectGenreHandler = function selectGenreHandler(genre) {\n    console.log(genre);\n    setGenreFilter(genre);\n\n    if (genreFilter.length > 0) {\n      getGenre(genreFilter).then(function (rooms) {\n        return setRooms(rooms);\n      });\n    } else {\n      getRooms().then(function (rooms) {\n        return setRooms(rooms);\n      });\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.marginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }\n  }, React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), React.createElement(GlobalTitles, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.genreMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(GenreMenu, {\n    handler: selectGenreHandler,\n    genreSelected: genreFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  })), React.createElement(View, {\n    style: styles.roomList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      height: \"100%\"\n    },\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    data: rooms,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return selectRoomHandler(item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 8\n        }\n      }, React.createElement(RoomElementHome, {\n        room: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  marginContainer: {\n    marginHorizontal: \"3%\",\n    marginTop: \"1%\",\n    height: \"100%\"\n  },\n  genreMenuContainer: {\n    marginHorizontal: \"3%\",\n    marginVertical: \"3%\"\n  },\n  roomList: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pressed: {\n    color: \"#FF267C\"\n  },\n  clean: {\n    color: \"#828282\"\n  }\n});","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx"],"names":["StatusBar","React","useEffect","useState","SearchBar","select_id","select_genre","fetch_rooms","useDispatch","useSelector","GlobalTitles","GenreMenu","Location","RoomElementHome","createStackNavigator","getRooms","getGenre","Stack","TITLES","Home","navigation","dispatch","title","Math","round","random","length","genreFilter","setGenreFilter","rooms","setRooms","then","selectRoomHandler","id","navigate","selectGenreHandler","genre","console","log","styles","container","marginContainer","genreMenuContainer","roomList","height","item","_id","StyleSheet","create","flex","backgroundColor","marginHorizontal","marginTop","marginVertical","flexDirection","alignItems","justifyContent","pressed","color","clean"],"mappings":"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","sourcesContent":["// import 'react-native-gesture-handler';\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tSafeAreaView,\n\tFlatList,\n\tTouchableOpacity,\n\tAnimated,\n} from \"react-native\";\n\nimport { SearchBar } from \"react-native-elements\";\n\nimport { select_id, select_genre, fetch_rooms } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GlobalTitles from \"../components/global-titles\";\n// import SearchBar from \"../components/searchbar\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n// API Imports\nimport { getRooms, getGenre } from \"../../apiService\";\n\nconst Stack = createStackNavigator();\n\nconst TITLES = [\n\t\"Let's find your next adventure 🤟🏼\",\n\t\"Are you ready for the action? 🕵🏽 \",\n\t\"Find the best escapes in town 🔝🔝\",\n\t//TODO: ADD MORE TITLES\n\t//TODO: IMPLEMENT SEARCHBAR\n\t//TODO: HIDE SEARCH BAR ON SCROLL\n\t//TODO: NOT SCROLLING TO THE BOTTOM\n];\n\nexport default function Home({ navigation }) {\n\tconst dispatch = useDispatch();\n\tconst title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\n\tconst [genreFilter, setGenreFilter] = useState(\"All\");\n\tconst [rooms, setRooms] = useState();\n\n\tuseEffect(() => {\n\t\tgetRooms().then(rooms => setRooms(rooms));\n\t\tdispatch(fetch_rooms(rooms));\n\t}, []);\n\n\tconst selectRoomHandler = id => {\n\t\tdispatch(select_id(id));\n\t\tnavigation.navigate(\"roomDetails\");\n\t};\n\n\tconst selectGenreHandler = genre => {\n\t\tconsole.log(genre);\n\t\tsetGenreFilter(genre);\n\t\tif (genreFilter.length > 0) {\n\t\t\tgetGenre(genreFilter).then(rooms => setRooms(rooms));\n\t\t} else {\n\t\t\tgetRooms().then(rooms => setRooms(rooms));\n\t\t}\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.marginContainer}>\n\t\t\t\t<Location />\n\t\t\t\t<GlobalTitles title={title} />\n\t\t\t\t{/* <SearchBar handleChange={handleChange} /> */}\n\t\t\t\t{/* <SearchBar\n\t\t\t\t\tplaceholder=\"Try typing a name...\"\n\t\t\t\t\tlightTheme\n\t\t\t\t\tround\n\t\t\t\t\tonChangeText={search => updateSearch(search)}\n\t\t\t\t\tautoCorrect={false}\n\t\t\t\t/> */}\n\t\t\t\t<View style={styles.genreMenuContainer}>\n\t\t\t\t\t<GenreMenu handler={selectGenreHandler} genreSelected={genreFilter} />\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.roomList}>\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tstyle={{ height: \"100%\" }}\n\t\t\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\t\t\tbounces={false}\n\t\t\t\t\t\tdata={rooms}\n\t\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectRoomHandler(item._id)}>\n\t\t\t\t\t\t\t\t<RoomElementHome room={item} />\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tmarginContainer: {\n\t\tmarginHorizontal: \"3%\",\n\t\tmarginTop: \"1%\",\n\t\theight: \"100%\",\n\t},\n\tgenreMenuContainer: {\n\t\tmarginHorizontal: \"3%\",\n\t\tmarginVertical: \"3%\",\n\t},\n\troomList: {\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tpressed: { color: \"#FF267C\" },\n\tclean: { color: \"#828282\" },\n});\n"]},"metadata":{},"sourceType":"module"}