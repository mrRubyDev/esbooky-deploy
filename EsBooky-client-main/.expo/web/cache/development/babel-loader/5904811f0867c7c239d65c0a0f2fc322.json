{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = \"http://192.168.1.132:3000/\";\nexport var getRooms = function getRooms() {\n  return _regeneratorRuntime.async(function getRooms$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", fetch(baseURL + \"rooms\").then(function (data) {\n            return data.json();\n          }).then(function (topics) {\n            return topics;\n          }).catch(function (err) {\n            return console.log(err);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getGenre = function getGenre(genre) {\n  var res, data;\n  return _regeneratorRuntime.async(function getGenre$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseURL + genre));\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"There is an error with getGenre: \", _context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var getOne = function getOne(id) {\n  var res, data;\n  return _regeneratorRuntime.async(function getOne$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"rooms/\" + id));\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"There is an error with getOne: \", _context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var newUser = function newUser(name, email, pass) {\n  var header, res;\n  return _regeneratorRuntime.async(function newUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          header = new Headers();\n          header.append(\"Content-Type\", \"application/json\");\n          _context4.next = 4;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"addUser\", {\n            method: \"POST\",\n            headers: header,\n            body: {\n              name: name,\n              email: email,\n              password: pass\n            },\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"error with new User: \", error);\n          }));\n\n        case 4:\n          res = _context4.sent;\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var checkCredentials = function checkCredentials(email) {\n  var res, data;\n  return _regeneratorRuntime.async(function checkCredentials$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"login/\" + email));\n\n        case 3:\n          res = _context5.sent;\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context5.sent;\n          console.log(data);\n          return _context5.abrupt(\"return\", data);\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(\"There is an error with check Credentials: \", _context5.t0);\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n};\nexport var postToFavs = function postToFavs(roomId, userId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function postToFavs$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId,\n            userId: userId\n          });\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"postToFavs\", {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"There's an error with get Fav: \", error);\n          }));\n\n        case 5:\n          res = _context6.sent;\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteFromFavs = function deleteFromFavs(roomId, userId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function deleteFromFavs$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId,\n            userId: userId\n          });\n          res = fetch(baseURL + \"deleteFavs\", {\n            method: \"DELETE\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"There is an error with delete Fav: \", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postToCompleted = function postToCompleted(roomId, userId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function postToCompleted$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId,\n            userId: userId\n          });\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"postCompleted\", {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"There's an error with get postCompleted: \", error);\n          }));\n\n        case 5:\n          res = _context8.sent;\n\n        case 6:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteFromCompleted = function deleteFromCompleted(roomId, userId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function deleteFromCompleted$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId,\n            userId: userId\n          });\n          res = fetch(baseURL + \"deleteCompleted\", {\n            method: \"DELETE\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"There is an error with delete Fav: \", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postNewSquad = function postNewSquad(squadName, squadDescription, squadID) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function postNewSquad$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            name: squadName,\n            description: squadDescription,\n            id: squadID\n          });\n          res = fetch(baseURL + \"postSquad\", {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with postNewSquad:\", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getSquadInfo = function getSquadInfo(squadId) {\n  var myHeaders, res;\n  return _regeneratorRuntime.async(function getSquadInfo$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          res = fetch(baseURL + \"squad/\" + squadId).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with getSquadInfo:\", error);\n          });\n\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getUserSquad = function getUserSquad(userId) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  return fetch(baseURL + \"squad/\" + \"users/\" + userId).then(function (response) {\n    return response.json();\n  }).then(function (result) {\n    console.log(result);\n    return result;\n  }).catch(function (error) {\n    return console.log(\"Error with getSquadInfo:\", error);\n  });\n};\nexport var addUserToSquad = function addUserToSquad(squadID, userId) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    userId: userId\n  });\n  return fetch(baseURL + \"squad/\" + squadID, {\n    method: \"POST\",\n    headers: myHeaders,\n    body: raw,\n    redirect: \"follow\"\n  }).then(function (response) {\n    return response.text();\n  }).then(function (result) {\n    return console.log(result);\n  }).catch(function (error) {\n    return console.log(\"Error with postUserToSquad:\", error);\n  });\n};\nexport var postToSquadCompleted = function postToSquadCompleted(squadID, roomId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function postToSquadCompleted$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId\n          });\n          res = fetch(baseURL + \"squad/\" + squadID + \"/postCompleted\", {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with postToSquadCompleted:\", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteFromSquadCompleted = function deleteFromSquadCompleted(squadID, roomId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function deleteFromSquadCompleted$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId\n          });\n          res = fetch(baseURL + \"squad/\" + squadID + \"/deleteCompleted\", {\n            method: \"DELETE\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with deleteFromSquadCompleted:\", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postToSquadFavs = function postToSquadFavs(squadID, roomId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function postToSquadFavs$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId\n          });\n          res = fetch(baseURL + \"squad/\" + squadID + \"/postToFavs\", {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with postToSquadFavs:\", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteFromSquadFavs = function deleteFromSquadFavs(squadID, roomId) {\n  var myHeaders, raw, res;\n  return _regeneratorRuntime.async(function deleteFromSquadFavs$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            roomId: roomId\n          });\n          res = fetch(baseURL + \"squad/\" + squadID + \"/deleteFavs\", {\n            method: \"DELETE\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with deleteFromSquadFavs:\", error);\n          });\n\n        case 4:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteUserFromSquad = function deleteUserFromSquad(squadID, userId) {\n  var myHeaders, raw;\n  return _regeneratorRuntime.async(function deleteUserFromSquad$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          raw = JSON.stringify({\n            userId: userId\n          });\n          return _context16.abrupt(\"return\", fetch(baseURL + \"squad/\" + squadID + \"/deleteUser\", {\n            method: \"DELETE\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\"\n          }).then(function (response) {\n            return response.text();\n          }).then(function (result) {\n            return console.log(result);\n          }).catch(function (error) {\n            return console.log(\"Error with deleteFromSquadFavs:\", error);\n          }));\n\n        case 4:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/apiService.js"],"names":["baseURL","getRooms","fetch","then","data","json","topics","catch","err","console","log","getGenre","genre","res","getOne","id","newUser","name","email","pass","header","Headers","append","method","headers","body","password","redirect","response","text","result","error","checkCredentials","postToFavs","roomId","userId","myHeaders","raw","JSON","stringify","deleteFromFavs","postToCompleted","deleteFromCompleted","postNewSquad","squadName","squadDescription","squadID","description","getSquadInfo","squadId","getUserSquad","addUserToSquad","postToSquadCompleted","deleteFromSquadCompleted","postToSquadFavs","deleteFromSquadFavs","deleteUserFromSquad"],"mappings":"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","sourcesContent":["const baseURL = \"http://192.168.1.132:3000/\";\n\nexport const getRooms = async () => {\n\treturn fetch(baseURL + \"rooms\")\n\t\t.then(data => data.json())\n\t\t.then(topics => topics)\n\t\t.catch(err => console.log(err));\n};\nexport const getGenre = async genre => {\n\ttry {\n\t\tconst res = await fetch(baseURL + genre);\n\t\tconst data = await res.json();\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.log(\"There is an error with getGenre: \", e);\n\t}\n};\n\nexport const getOne = async id => {\n\ttry {\n\t\tconst res = await fetch(baseURL + \"rooms/\" + id);\n\t\tconst data = await res.json();\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.log(\"There is an error with getOne: \", e);\n\t}\n};\n\nexport const newUser = async (name, email, pass) => {\n\tconst header = new Headers();\n\theader.append(\"Content-Type\", \"application/json\");\n\tconst res = await fetch(baseURL + \"addUser\", {\n\t\tmethod: \"POST\",\n\t\theaders: header,\n\t\tbody: {\n\t\t\tname: name,\n\t\t\temail: email,\n\t\t\tpassword: pass,\n\t\t},\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"error with new User: \", error));\n};\n\nexport const checkCredentials = async email => {\n\ttry {\n\t\tconst res = await fetch(baseURL + \"login/\" + email);\n\t\tconst data = await res.json();\n\t\tconsole.log(data);\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.log(\"There is an error with check Credentials: \", e);\n\t}\n};\n\nexport const postToFavs = async (roomId, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t\tuserId: userId,\n\t});\n\n\tconst res = await fetch(baseURL + \"postToFavs\", {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"There's an error with get Fav: \", error));\n};\n\nexport const deleteFromFavs = async (roomId, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t\tuserId: userId,\n\t});\n\n\tconst res = fetch(baseURL + \"deleteFavs\", {\n\t\tmethod: \"DELETE\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"There is an error with delete Fav: \", error));\n};\n\nexport const postToCompleted = async (roomId, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t\tuserId: userId,\n\t});\n\n\tconst res = await fetch(baseURL + \"postCompleted\", {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error =>\n\t\t\tconsole.log(\"There's an error with get postCompleted: \", error)\n\t\t);\n};\n\nexport const deleteFromCompleted = async (roomId, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t\tuserId: userId,\n\t});\n\n\tconst res = fetch(baseURL + \"deleteCompleted\", {\n\t\tmethod: \"DELETE\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"There is an error with delete Fav: \", error));\n};\n\n//SQUAD SERVICES\nexport const postNewSquad = async (squadName, squadDescription, squadID) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\tname: squadName,\n\t\tdescription: squadDescription,\n\t\tid: squadID,\n\t});\n\tconst res = fetch(baseURL + \"postSquad\", {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with postNewSquad:\", error));\n};\n\nexport const getSquadInfo = async squadId => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst res = fetch(baseURL + \"squad/\" + squadId)\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with getSquadInfo:\", error));\n};\n\nexport const getUserSquad = userId => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\treturn fetch(baseURL + \"squad/\" + \"users/\" + userId)\n\t\t.then(response => response.json())\n\t\t.then(result => {\n\t\t\tconsole.log(result);\n\t\t\treturn result;\n\t\t})\n\t\t.catch(error => console.log(\"Error with getSquadInfo:\", error));\n};\n\nexport const addUserToSquad = (squadID, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\tconst raw = JSON.stringify({\n\t\tuserId: userId,\n\t});\n\treturn fetch(baseURL + \"squad/\" + squadID, {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with postUserToSquad:\", error));\n};\n\nexport const postToSquadCompleted = async (squadID, roomId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t});\n\tconst res = fetch(baseURL + \"squad/\" + squadID + \"/postCompleted\", {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with postToSquadCompleted:\", error));\n};\n\nexport const deleteFromSquadCompleted = async (squadID, roomId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t});\n\tconst res = fetch(baseURL + \"squad/\" + squadID + \"/deleteCompleted\", {\n\t\tmethod: \"DELETE\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with deleteFromSquadCompleted:\", error));\n};\n\nexport const postToSquadFavs = async (squadID, roomId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t});\n\tconst res = fetch(baseURL + \"squad/\" + squadID + \"/postToFavs\", {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with postToSquadFavs:\", error));\n};\n\nexport const deleteFromSquadFavs = async (squadID, roomId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\troomId: roomId,\n\t});\n\tconst res = fetch(baseURL + \"squad/\" + squadID + \"/deleteFavs\", {\n\t\tmethod: \"DELETE\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with deleteFromSquadFavs:\", error));\n};\n\nexport const deleteUserFromSquad = async (squadID, userId) => {\n\tconst myHeaders = new Headers();\n\tmyHeaders.append(\"Content-Type\", \"application/json\");\n\n\tconst raw = JSON.stringify({\n\t\tuserId: userId,\n\t});\n\n\treturn fetch(baseURL + \"squad/\" + squadID + \"/deleteUser\", {\n\t\tmethod: \"DELETE\",\n\t\theaders: myHeaders,\n\t\tbody: raw,\n\t\tredirect: \"follow\",\n\t})\n\t\t.then(response => response.text())\n\t\t.then(result => console.log(result))\n\t\t.catch(error => console.log(\"Error with deleteFromSquadFavs:\", error));\n};\n"]},"metadata":{},"sourceType":"module"}