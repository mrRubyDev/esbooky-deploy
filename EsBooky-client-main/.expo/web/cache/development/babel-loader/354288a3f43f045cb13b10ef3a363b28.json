{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/lists.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RenderedList from \"../components/RenderedList\";\nexport default function Lists() {\n  var _useState = useState(\"saved\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pressed = _useState2[0],\n      setPressed = _useState2[1];\n\n  var _useState3 = useState(\"Saved List\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listToRender = _useState4[0],\n      setListToRender = _useState4[1];\n\n  useEffect(function () {}, [listToRender]);\n\n  var handleSelectedStyle = function handleSelectedStyle() {\n    if (pressed === \"saved\") {\n      setPressed(\"completed\");\n      setListToRender(\"Completed List\");\n    } else {\n      pressed = (_readOnlyError(\"pressed\"), \"saved\");\n      listToRender = (_readOnlyError(\"listToRender\"), \"Saved List\");\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.marginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.listSelectorContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.listSelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.selectorElement,\n    onPress: handleSelectedStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: pressed === \"saved\" ? styles.pressed : styles.clean,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }\n  }, \"Saved\")), React.createElement(TouchableOpacity, {\n    style: styles.selectorElement,\n    onPress: handleSelectedStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: pressed === \"saved\" ? styles.clean : styles.pressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \"Completed\")))), React.createElement(RenderedList, {\n    list: listToRender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  marginContainer: {\n    marginHorizontal: \"3%\"\n  },\n  listSelectorContainer: {\n    marginTop: \"8%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 20\n  },\n  listSelector: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 20,\n    paddingHorizontal: 10\n  },\n  selectorElement: {\n    padding: 10,\n    width: \"25%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  pressed: {\n    color: \"#5FC9F8\"\n  },\n  clean: {\n    color: \"#828282\"\n  }\n});","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/lists.jsx"],"names":["React","useEffect","useState","StatusBar","RenderedList","Lists","pressed","setPressed","listToRender","setListToRender","handleSelectedStyle","styles","container","marginContainer","listSelectorContainer","listSelector","selectorElement","clean","StyleSheet","create","flex","backgroundColor","marginHorizontal","marginTop","justifyContent","alignItems","borderRadius","flexDirection","paddingHorizontal","padding","width","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tImage,\n\tSafeAreaView,\n\tTouchableOpacity,\n} from \"react-native\";\n\nimport RenderedList from \"../components/RenderedList\";\n// import ListSelector from \"../components/listSelector\";\n\n//TODO: Change colors when clicking \"saved\" or \"completed\"\n\nexport default function Lists() {\n\tconst [pressed, setPressed] = useState(\"saved\");\n\tconst [listToRender, setListToRender] = useState(\"Saved List\");\n\n\t// let savedStyle = { color: \"#5FC9F8\" };\n\t// let completedStyle = { color: \"#828282\" };\n\n\tuseEffect(() => {}, [listToRender]);\n\n\tconst handleSelectedStyle = () => {\n\t\tif (pressed === \"saved\") {\n\t\t\tsetPressed(\"completed\");\n\t\t\tsetListToRender(\"Completed List\");\n\t\t} else {\n\t\t\tpressed = \"saved\";\n\t\t\tlistToRender = \"Saved List\";\n\t\t}\n\t};\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.marginContainer}>\n\t\t\t\t<View style={styles.listSelectorContainer}>\n\t\t\t\t\t<View style={styles.listSelector}>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={styles.selectorElement}\n\t\t\t\t\t\t\tonPress={handleSelectedStyle}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={pressed === \"saved\" ? styles.pressed : styles.clean}>\n\t\t\t\t\t\t\t\tSaved\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\tstyle={styles.selectorElement}\n\t\t\t\t\t\t\tonPress={handleSelectedStyle}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text style={pressed === \"saved\" ? styles.clean : styles.pressed}>\n\t\t\t\t\t\t\t\tCompleted\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\n\t\t\t\t<RenderedList list={listToRender} />\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tmarginContainer: {\n\t\tmarginHorizontal: \"3%\",\n\t},\n\tlistSelectorContainer: {\n\t\tmarginTop: \"8%\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 20,\n\t},\n\tlistSelector: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 20,\n\t\tpaddingHorizontal: 10,\n\t},\n\tselectorElement: {\n\t\tpadding: 10,\n\t\twidth: \"25%\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\tpressed: {\n\t\tcolor: \"#5FC9F8\",\n\t},\n\tclean: {\n\t\tcolor: \"#828282\",\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}