{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { getRooms, getGenre } from \"../../apiService\";\n\nfunction reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    selected_id: null,\n    rooms: [],\n    login: false,\n    user: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_ROOM_ID\":\n      state.selected_id = action.id;\n      return state;\n\n    case \"SELECT_GENRE\":\n      state.selected_genre = action.genre;\n      return state;\n\n    case \"FETCH_ROOMS\":\n      state.rooms = action.list;\n      return state;\n\n    case \"ADD_SAVED_LIST\":\n      if (!state.user.fav_list.includes(action.roomId)) {\n        state.user.fav_list.push(action.roomId);\n      }\n\n      return state;\n\n    case \"ADD_COMPLETED_LIST\":\n      if (!state.user.completed_list.includes(action.roomId)) {\n        var newList = [].concat(_toConsumableArray(state.user.completed_list), [action.roomId]);\n        state.user.completed_list = newList;\n      }\n\n      return state;\n\n    case \"DELETE_FROM_SAVED\":\n      var indexSav = state.user.fav_list.indexOf(action.roomId);\n      state.user.fav_list.splice(indexSav, indexSav + 1);\n      return state;\n\n    case \"DELETE_FROM_COMPLETED\":\n      var indexComp = state.user.completed_list.indexOf(action.roomId);\n      state.user.completed_list.fav_list.splice(indexComp, indexComp + 1);\n      return state;\n\n    case \"SET_LOGIN_TRUE\":\n      state.login = true;\n      return state;\n\n    case \"SET_USER_INFO\":\n      state.user = action.user;\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducers;","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/reducers.js"],"names":["getRooms","getGenre","reducers","state","selected_id","rooms","login","user","action","type","id","selected_genre","genre","list","fav_list","includes","roomId","push","completed_list","newList","indexSav","indexOf","splice","indexComp"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB;;AAEA,SAASC,QAAT,GAQE;AAAA,MAPDC,KAOC,uEAPO;AACPC,IAAAA,WAAW,EAAE,IADN;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,KAAK,EAAE,KAHA;AAIPC,IAAAA,IAAI,EAAE;AAJC,GAOP;AAAA,MADDC,MACC;;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACCN,MAAAA,KAAK,CAACC,WAAN,GAAoBI,MAAM,CAACE,EAA3B;AACA,aAAOP,KAAP;;AACD,SAAK,cAAL;AACCA,MAAAA,KAAK,CAACQ,cAAN,GAAuBH,MAAM,CAACI,KAA9B;AACA,aAAOT,KAAP;;AACD,SAAK,aAAL;AACCA,MAAAA,KAAK,CAACE,KAAN,GAAcG,MAAM,CAACK,IAArB;AACA,aAAOV,KAAP;;AAED,SAAK,gBAAL;AACC,UAAI,CAACA,KAAK,CAACI,IAAN,CAAWO,QAAX,CAAoBC,QAApB,CAA6BP,MAAM,CAACQ,MAApC,CAAL,EAAkD;AACjDb,QAAAA,KAAK,CAACI,IAAN,CAAWO,QAAX,CAAoBG,IAApB,CAAyBT,MAAM,CAACQ,MAAhC;AACA;;AACD,aAAOb,KAAP;;AAED,SAAK,oBAAL;AAIC,UAAI,CAACA,KAAK,CAACI,IAAN,CAAWW,cAAX,CAA0BH,QAA1B,CAAmCP,MAAM,CAACQ,MAA1C,CAAL,EAAwD;AACvD,YAAMG,OAAO,gCAAOhB,KAAK,CAACI,IAAN,CAAWW,cAAlB,IAAkCV,MAAM,CAACQ,MAAzC,EAAb;AACAb,QAAAA,KAAK,CAACI,IAAN,CAAWW,cAAX,GAA4BC,OAA5B;AACA;;AAED,aAAOhB,KAAP;;AAED,SAAK,mBAAL;AACC,UAAMiB,QAAQ,GAAGjB,KAAK,CAACI,IAAN,CAAWO,QAAX,CAAoBO,OAApB,CAA4Bb,MAAM,CAACQ,MAAnC,CAAjB;AACAb,MAAAA,KAAK,CAACI,IAAN,CAAWO,QAAX,CAAoBQ,MAApB,CAA2BF,QAA3B,EAAqCA,QAAQ,GAAG,CAAhD;AACA,aAAOjB,KAAP;;AAED,SAAK,uBAAL;AACC,UAAMoB,SAAS,GAAGpB,KAAK,CAACI,IAAN,CAAWW,cAAX,CAA0BG,OAA1B,CAAkCb,MAAM,CAACQ,MAAzC,CAAlB;AACAb,MAAAA,KAAK,CAACI,IAAN,CAAWW,cAAX,CAA0BJ,QAA1B,CAAmCQ,MAAnC,CAA0CC,SAA1C,EAAqDA,SAAS,GAAG,CAAjE;AACA,aAAOpB,KAAP;;AACD,SAAK,gBAAL;AACCA,MAAAA,KAAK,CAACG,KAAN,GAAc,IAAd;AACA,aAAOH,KAAP;;AAED,SAAK,eAAL;AACCA,MAAAA,KAAK,CAACI,IAAN,GAAaC,MAAM,CAACD,IAApB;AACA,aAAOJ,KAAP;;AAED;AACC,aAAOA,KAAP;AA9CF;AAgDA;;AAED,eAAeD,QAAf","sourcesContent":["import { getRooms, getGenre } from \"../../apiService\";\n\nfunction reducers(\n\tstate = {\n\t\tselected_id: null,\n\t\trooms: [],\n\t\tlogin: false,\n\t\tuser: {},\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_ROOM_ID\":\n\t\t\tstate.selected_id = action.id;\n\t\t\treturn state;\n\t\tcase \"SELECT_GENRE\":\n\t\t\tstate.selected_genre = action.genre;\n\t\t\treturn state;\n\t\tcase \"FETCH_ROOMS\":\n\t\t\tstate.rooms = action.list;\n\t\t\treturn state;\n\n\t\tcase \"ADD_SAVED_LIST\":\n\t\t\tif (!state.user.fav_list.includes(action.roomId)) {\n\t\t\t\tstate.user.fav_list.push(action.roomId);\n\t\t\t}\n\t\t\treturn state;\n\n\t\tcase \"ADD_COMPLETED_LIST\":\n\t\t\t// if (!state.user.completed_list.includes(action.roomId)) {\n\t\t\t// \tstate.user.completed_list.push(action.roomId);\n\t\t\t// }\n\t\t\tif (!state.user.completed_list.includes(action.roomId)) {\n\t\t\t\tconst newList = [...state.user.completed_list, action.roomId];\n\t\t\t\tstate.user.completed_list = newList;\n\t\t\t}\n\n\t\t\treturn state;\n\n\t\tcase \"DELETE_FROM_SAVED\":\n\t\t\tconst indexSav = state.user.fav_list.indexOf(action.roomId);\n\t\t\tstate.user.fav_list.splice(indexSav, indexSav + 1);\n\t\t\treturn state;\n\n\t\tcase \"DELETE_FROM_COMPLETED\":\n\t\t\tconst indexComp = state.user.completed_list.indexOf(action.roomId);\n\t\t\tstate.user.completed_list.fav_list.splice(indexComp, indexComp + 1);\n\t\t\treturn state;\n\t\tcase \"SET_LOGIN_TRUE\":\n\t\t\tstate.login = true;\n\t\t\treturn state;\n\n\t\tcase \"SET_USER_INFO\":\n\t\t\tstate.user = action.user;\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducers;\n\n// Separar states seg√∫n DB\n// Combine reducers\n// redux thunk\n"]},"metadata":{},"sourceType":"module"}