{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useScrollToTop } from \"@react-navigation/native\";\nimport { SearchBar } from \"react-native-elements\";\nimport { select_id, add_saved_list, fetch_rooms, get_user_squad } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GlobalTitles from \"../components/global-titles\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\nimport { ScrollView, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nvar TITLES = [\"Let's find your next adventure ü§üüèº\", \"Are you ready for the action? üïµüèΩ \", \"Find the best escapes in town üîùüîù\"];\nvar title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreFilter = _useState2[0],\n      setGenreFilter = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredRooms = _useState4[0],\n      setFilteredRooms = _useState4[1];\n\n  var rooms = useSelector(function (state) {\n    return state.rooms;\n  });\n  var favorites = useSelector(function (state) {\n    return state.user.fav_list;\n  });\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var ref = React.useRef(null);\n  useScrollToTop(ref);\n  useEffect(function () {\n    dispatch(fetch_rooms());\n  }, []);\n  useEffect(function () {\n    handleFilterChange();\n  }, [genreFilter]);\n\n  var selectRoomHandler = function selectRoomHandler(id) {\n    dispatch(select_id(id));\n    navigation.navigate(\"roomDetails\");\n  };\n\n  useEffect(function () {\n    if (user.id) {\n      dispatch(get_user_squad(user.id));\n    }\n  }, [user]);\n\n  var handleFilterChange = function handleFilterChange() {\n    if (genreFilter !== \"All\") {\n      var res = rooms.filter(function (room) {\n        return room.genres.includes(genreFilter);\n      });\n      setFilteredRooms(res);\n    } else {\n      setFilteredRooms();\n    }\n  };\n\n  var selectGenreHandler = function selectGenreHandler(genre) {\n    if (genre === genreFilter) {\n      setGenreFilter(\"All\");\n    } else {\n      setGenreFilter(genre);\n    }\n  };\n\n  var handleAddToFavorites = function handleAddToFavorites(roomId) {\n    if (!user.fav_list.includes(roomId)) dispatch(add_saved_list(roomId, user.id));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.marginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }\n  }, React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), React.createElement(GlobalTitles, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.genreMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(GenreMenu, {\n    handler: selectGenreHandler,\n    genreSelected: genreFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  })), favorites ? React.createElement(FlatList, {\n    style: {\n      flex: 1\n    },\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    data: filteredRooms ? filteredRooms : rooms,\n    keyExtractor: function keyExtractor(item) {\n      return item._id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return selectRoomHandler(item._id);\n        },\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 8\n        }\n      }, React.createElement(RoomElementHome, {\n        room: item,\n        key: index,\n        handleAddToFav: handleAddToFavorites,\n        isFavorite: item._id in favorites ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }) : React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  marginContainer: {\n    marginRight: \"3%\",\n    marginLeft: \"3%\",\n    marginTop: \"1%\",\n    height: \"100%\"\n  },\n  genreMenuContainer: {\n    marginHorizontal: \"3%\",\n    marginVertical: \"3%\"\n  },\n  pressed: {\n    color: \"#FF267C\"\n  },\n  clean: {\n    color: \"#828282\"\n  }\n});","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx"],"names":["StatusBar","React","useEffect","useState","useScrollToTop","SearchBar","select_id","add_saved_list","fetch_rooms","get_user_squad","useDispatch","useSelector","GlobalTitles","GenreMenu","Location","RoomElementHome","ScrollView","TouchableWithoutFeedback","TITLES","title","Math","round","random","length","Home","navigation","dispatch","genreFilter","setGenreFilter","filteredRooms","setFilteredRooms","rooms","state","favorites","user","fav_list","ref","useRef","handleFilterChange","selectRoomHandler","id","navigate","res","filter","room","genres","includes","selectGenreHandler","genre","handleAddToFavorites","roomId","styles","container","marginContainer","genreMenuContainer","flex","item","_id","toString","index","StyleSheet","create","backgroundColor","marginRight","marginLeft","marginTop","height","marginHorizontal","marginVertical","pressed","color","clean"],"mappings":"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","sourcesContent":["// import 'react-native-gesture-handler';\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tSafeAreaView,\n\tFlatList,\n\tTouchableOpacity,\n\tButton,\n} from \"react-native\";\n\nimport { useScrollToTop } from \"@react-navigation/native\";\n\nimport { SearchBar } from \"react-native-elements\";\n\nimport {\n\tselect_id,\n\tadd_saved_list,\n\tfetch_rooms,\n\tget_user_squad,\n} from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GlobalTitles from \"../components/global-titles\";\n// import SearchBar from \"../components/searchbar\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\n\nimport {\n\tScrollView,\n\tTouchableWithoutFeedback,\n} from \"react-native-gesture-handler\";\n\nconst TITLES = [\n\t\"Let's find your next adventure ü§üüèº\",\n\t\"Are you ready for the action? üïµüèΩ \",\n\t\"Find the best escapes in town üîùüîù\",\n];\n\nconst title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\n\nexport default function Home({ navigation }) {\n\tconst dispatch = useDispatch();\n\tconst [genreFilter, setGenreFilter] = useState(\"All\");\n\tconst [filteredRooms, setFilteredRooms] = useState();\n\tconst rooms = useSelector(state => state.rooms);\n\tconst favorites = useSelector(state => state.user.fav_list);\n\tconst user = useSelector(state => state.user);\n\n\t// Scroll to top on tab press\n\tconst ref = React.useRef(null);\n\tuseScrollToTop(ref);\n\n\t// Get the room data and send it to redux.\n\tuseEffect(() => {\n\t\tdispatch(fetch_rooms());\n\t}, []);\n\n\t//This useEffect is used to filter the rooms when genre is clicked.\n\tuseEffect(() => {\n\t\thandleFilterChange();\n\t}, [genreFilter]);\n\n\t//Send selected room id to redux and navigate to room details screen.\n\tconst selectRoomHandler = id => {\n\t\tdispatch(select_id(id));\n\t\tnavigation.navigate(\"roomDetails\");\n\t};\n\n\t// Get user squad info to redux\n\tuseEffect(() => {\n\t\tif (user.id) {\n\t\t\tdispatch(get_user_squad(user.id));\n\t\t}\n\t}, [user]);\n\n\t// If the genre selected is different than all, filter the rooms, else display all.\n\tconst handleFilterChange = () => {\n\t\tif (genreFilter !== \"All\") {\n\t\t\tconst res = rooms.filter(room => room.genres.includes(genreFilter));\n\t\t\tsetFilteredRooms(res);\n\t\t} else {\n\t\t\tsetFilteredRooms();\n\t\t}\n\t};\n\n\tconst selectGenreHandler = genre => {\n\t\tif (genre === genreFilter) {\n\t\t\tsetGenreFilter(\"All\");\n\t\t} else {\n\t\t\tsetGenreFilter(genre);\n\t\t}\n\t};\n\n\tconst handleAddToFavorites = roomId => {\n\t\tif (!user.fav_list.includes(roomId))\n\t\t\tdispatch(add_saved_list(roomId, user.id));\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.marginContainer}>\n\t\t\t\t<Location />\n\t\t\t\t<GlobalTitles title={title} />\n\t\t\t\t{/* <SearchBar handleChange={handleChange} /> */}\n\t\t\t\t{/* <SearchBar\n\t\t\t\t\tplaceholder=\"Try typing a name...\"\n\t\t\t\t\tlightTheme\n\t\t\t\t\tround\n\t\t\t\t\tonChangeText={search => updateSearch(search)}\n\t\t\t\t\tautoCorrect={false}\n\t\t\t\t/> */}\n\t\t\t\t<View style={styles.genreMenuContainer}>\n\t\t\t\t\t<GenreMenu handler={selectGenreHandler} genreSelected={genreFilter} />\n\t\t\t\t</View>\n\t\t\t\t{/* <ScrollView ref={ref}> */}\n\t\t\t\t{favorites ? (\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\t\t\tbounces={false}\n\t\t\t\t\t\tdata={filteredRooms ? filteredRooms : rooms}\n\t\t\t\t\t\tkeyExtractor={item => item._id.toString()}\n\t\t\t\t\t\trenderItem={({ item, index }) => (\n\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\tonPress={() => selectRoomHandler(item._id)}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RoomElementHome\n\t\t\t\t\t\t\t\t\troom={item}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\thandleAddToFav={handleAddToFavorites}\n\t\t\t\t\t\t\t\t\tisFavorite={item._id in favorites ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Text></Text>\n\t\t\t\t)}\n\n\t\t\t\t{/* </ScrollView> */}\n\t\t\t</View>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tmarginContainer: {\n\t\tmarginRight: \"3%\",\n\t\tmarginLeft: \"3%\",\n\t\tmarginTop: \"1%\",\n\t\theight: \"100%\",\n\t},\n\tgenreMenuContainer: {\n\t\tmarginHorizontal: \"3%\",\n\t\tmarginVertical: \"3%\",\n\t},\n\tpressed: { color: \"#FF267C\" },\n\tclean: { color: \"#828282\" },\n});\n"]},"metadata":{},"sourceType":"module"}