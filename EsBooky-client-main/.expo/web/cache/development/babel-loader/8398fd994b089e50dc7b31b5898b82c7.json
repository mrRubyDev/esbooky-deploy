{"ast":null,"code":"import { getRooms, getGenre } from \"../../apiService\";\n\nfunction reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    selected_id: null,\n    rooms: [],\n    savedList: [],\n    completedList: [],\n    login: false,\n    user: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_ROOM_ID\":\n      state.selected_id = action.id;\n      return state;\n\n    case \"SELECT_GENRE\":\n      state.selected_genre = action.genre;\n      return state;\n\n    case \"FETCH_ROOMS\":\n      state.rooms = action.list;\n      return state;\n\n    case \"ADD_SAVED_LIST\":\n      if (state.user && state.user.fav_list.length) {\n        if (!state.user.fav_list.includes(action.room)) state.user.fav_list.push(action.room);\n      } else state.user.fav_list.push(action.room);\n\n      return state;\n\n    case \"ADD_COMPLETED_LIST\":\n      if (state.completedList) {\n        if (!state.completedList.includes(action.room)) {\n          state.completedList.push(action.room);\n        }\n      }\n\n      return state;\n\n    case \"DELETE_FROM_SAVED\":\n      if (state.savedList && state.savedList.length > 1) {\n        var index = state.savedList.indexOf(action.room);\n        state.savedList.splice(index, index + 1);\n      } else if (state.savedList && state.savedList.length === 1) {\n        state.savedList = [];\n      }\n\n      return state;\n\n    case \"SET_LOGIN_TRUE\":\n      state.login = true;\n      return state;\n\n    case \"SET_USER_INFO\":\n      state.user = action.user;\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducers;","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/reducers.js"],"names":["getRooms","getGenre","reducers","state","selected_id","rooms","savedList","completedList","login","user","action","type","id","selected_genre","genre","list","fav_list","length","includes","room","push","index","indexOf","splice"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB;;AAEA,SAASC,QAAT,GAUE;AAAA,MATDC,KASC,uEATO;AACPC,IAAAA,WAAW,EAAE,IADN;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,SAAS,EAAE,EAHJ;AAIPC,IAAAA,aAAa,EAAE,EAJR;AAKPC,IAAAA,KAAK,EAAE,KALA;AAMPC,IAAAA,IAAI,EAAE;AANC,GASP;AAAA,MADDC,MACC;;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACCR,MAAAA,KAAK,CAACC,WAAN,GAAoBM,MAAM,CAACE,EAA3B;AACA,aAAOT,KAAP;;AACD,SAAK,cAAL;AACCA,MAAAA,KAAK,CAACU,cAAN,GAAuBH,MAAM,CAACI,KAA9B;AACA,aAAOX,KAAP;;AACD,SAAK,aAAL;AACCA,MAAAA,KAAK,CAACE,KAAN,GAAcK,MAAM,CAACK,IAArB;AACA,aAAOZ,KAAP;;AACD,SAAK,gBAAL;AACC,UAAIA,KAAK,CAACM,IAAN,IAAcN,KAAK,CAACM,IAAN,CAAWO,QAAX,CAAoBC,MAAtC,EAA8C;AAC7C,YAAI,CAACd,KAAK,CAACM,IAAN,CAAWO,QAAX,CAAoBE,QAApB,CAA6BR,MAAM,CAACS,IAApC,CAAL,EACChB,KAAK,CAACM,IAAN,CAAWO,QAAX,CAAoBI,IAApB,CAAyBV,MAAM,CAACS,IAAhC;AACD,OAHD,MAGOhB,KAAK,CAACM,IAAN,CAAWO,QAAX,CAAoBI,IAApB,CAAyBV,MAAM,CAACS,IAAhC;;AACP,aAAOhB,KAAP;;AACD,SAAK,oBAAL;AACC,UAAIA,KAAK,CAACI,aAAV,EAAyB;AACxB,YAAI,CAACJ,KAAK,CAACI,aAAN,CAAoBW,QAApB,CAA6BR,MAAM,CAACS,IAApC,CAAL,EAAgD;AAC/ChB,UAAAA,KAAK,CAACI,aAAN,CAAoBa,IAApB,CAAyBV,MAAM,CAACS,IAAhC;AACA;AACD;;AACD,aAAOhB,KAAP;;AACD,SAAK,mBAAL;AACC,UAAIA,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACG,SAAN,CAAgBW,MAAhB,GAAyB,CAAhD,EAAmD;AAClD,YAAMI,KAAK,GAAGlB,KAAK,CAACG,SAAN,CAAgBgB,OAAhB,CAAwBZ,MAAM,CAACS,IAA/B,CAAd;AACAhB,QAAAA,KAAK,CAACG,SAAN,CAAgBiB,MAAhB,CAAuBF,KAAvB,EAA8BA,KAAK,GAAG,CAAtC;AACA,OAHD,MAGO,IAAIlB,KAAK,CAACG,SAAN,IAAmBH,KAAK,CAACG,SAAN,CAAgBW,MAAhB,KAA2B,CAAlD,EAAqD;AAC3Dd,QAAAA,KAAK,CAACG,SAAN,GAAkB,EAAlB;AACA;;AACD,aAAOH,KAAP;;AACD,SAAK,gBAAL;AACCA,MAAAA,KAAK,CAACK,KAAN,GAAc,IAAd;AACA,aAAOL,KAAP;;AAED,SAAK,eAAL;AACCA,MAAAA,KAAK,CAACM,IAAN,GAAaC,MAAM,CAACD,IAApB;AACA,aAAON,KAAP;;AAED;AACC,aAAOA,KAAP;AAxCF;AA0CA;;AAED,eAAeD,QAAf","sourcesContent":["import { getRooms, getGenre } from \"../../apiService\";\n\nfunction reducers(\n\tstate = {\n\t\tselected_id: null,\n\t\trooms: [],\n\t\tsavedList: [],\n\t\tcompletedList: [],\n\t\tlogin: false,\n\t\tuser: {},\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_ROOM_ID\":\n\t\t\tstate.selected_id = action.id;\n\t\t\treturn state;\n\t\tcase \"SELECT_GENRE\":\n\t\t\tstate.selected_genre = action.genre;\n\t\t\treturn state;\n\t\tcase \"FETCH_ROOMS\":\n\t\t\tstate.rooms = action.list;\n\t\t\treturn state;\n\t\tcase \"ADD_SAVED_LIST\":\n\t\t\tif (state.user && state.user.fav_list.length) {\n\t\t\t\tif (!state.user.fav_list.includes(action.room))\n\t\t\t\t\tstate.user.fav_list.push(action.room);\n\t\t\t} else state.user.fav_list.push(action.room);\n\t\t\treturn state;\n\t\tcase \"ADD_COMPLETED_LIST\":\n\t\t\tif (state.completedList) {\n\t\t\t\tif (!state.completedList.includes(action.room)) {\n\t\t\t\t\tstate.completedList.push(action.room);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\tcase \"DELETE_FROM_SAVED\":\n\t\t\tif (state.savedList && state.savedList.length > 1) {\n\t\t\t\tconst index = state.savedList.indexOf(action.room);\n\t\t\t\tstate.savedList.splice(index, index + 1);\n\t\t\t} else if (state.savedList && state.savedList.length === 1) {\n\t\t\t\tstate.savedList = [];\n\t\t\t}\n\t\t\treturn state;\n\t\tcase \"SET_LOGIN_TRUE\":\n\t\t\tstate.login = true;\n\t\t\treturn state;\n\n\t\tcase \"SET_USER_INFO\":\n\t\t\tstate.user = action.user;\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducers;\n"]},"metadata":{},"sourceType":"module"}