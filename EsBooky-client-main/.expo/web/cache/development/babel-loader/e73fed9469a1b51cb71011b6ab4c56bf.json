{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from \"redux\";\nvar initialUser = {};\n\nfunction user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUser;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER_INFO\":\n      return action.user;\n\n    case \"ADD_SAVED_LIST\":\n      var newList = _objectSpread(_objectSpread({}, state), {}, {\n        fav_list: [].concat(_toConsumableArray(state.fav_list), [action.roomId])\n      });\n\n      return newList;\n\n    case \"ADD_COMPLETED_LIST\":\n      var newList1 = _objectSpread(_objectSpread({}, state), {}, {\n        completed_list: [].concat(_toConsumableArray(state.completed_list), [action.roomId])\n      });\n\n      return newList1;\n\n    case \"DELETE_FROM_SAVED\":\n      var indexSav = state.fav_list.indexOf(action.roomId);\n      var spliced = state.fav_list.splice(indexSav, indexSav + 1);\n\n      var newState = _objectSpread(_objectSpread({}, state), {}, {\n        fav_list: _toConsumableArray(spliced)\n      });\n\n      return newState;\n\n    case \"DELETE_FROM_COMPLETED\":\n      var indexComp = state.completed_list.indexOf(action.roomId);\n      var splicedComp = state.completed_list_list.splice(indexComp, indexComp + 1);\n\n      var newState1 = _objectSpread(_objectSpread({}, state), {}, {\n        completed_list_list: _toConsumableArray(splicedComp)\n      });\n\n      return newState1;\n\n    default:\n      return state;\n  }\n}\n\nvar initialLogin = false;\n\nfunction login() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialLogin;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_LOGIN_TRUE\":\n      return true;\n\n    default:\n      return state;\n  }\n}\n\nvar initialId = null;\n\nfunction selected_id() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialId;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_ROOM_ID\":\n      return action.id;\n\n    default:\n      return state;\n  }\n}\n\nvar initialRooms = [];\n\nfunction rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialRooms;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_GENRE\":\n      return action.genre;\n\n    case \"FETCH_ROOMS\":\n      return action.list;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user: user,\n  login: login,\n  selected_id: selected_id,\n  rooms: rooms\n});","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/reducers.js"],"names":["combineReducers","initialUser","user","state","action","type","newList","fav_list","roomId","newList1","completed_list","indexSav","indexOf","spliced","splice","newState","indexComp","splicedComp","completed_list_list","newState1","initialLogin","login","initialId","selected_id","id","initialRooms","rooms","genre","list"],"mappings":";;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,IAAMC,WAAW,GAAG,EAApB;;AACA,SAASC,IAAT,GAA2C;AAAA,MAA7BC,KAA6B,uEAArBF,WAAqB;AAAA,MAARG,MAAQ;;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,eAAL;AACC,aAAOD,MAAM,CAACF,IAAd;;AACD,SAAK,gBAAL;AACC,UAAMI,OAAO,mCACTH,KADS;AAEZI,QAAAA,QAAQ,+BAAMJ,KAAK,CAACI,QAAZ,IAAsBH,MAAM,CAACI,MAA7B;AAFI,QAAb;;AAIA,aAAOF,OAAP;;AAED,SAAK,oBAAL;AACC,UAAMG,QAAQ,mCACVN,KADU;AAEbO,QAAAA,cAAc,+BAAMP,KAAK,CAACO,cAAZ,IAA4BN,MAAM,CAACI,MAAnC;AAFD,QAAd;;AAIA,aAAOC,QAAP;;AAED,SAAK,mBAAL;AACC,UAAME,QAAQ,GAAGR,KAAK,CAACI,QAAN,CAAeK,OAAf,CAAuBR,MAAM,CAACI,MAA9B,CAAjB;AACA,UAAMK,OAAO,GAAGV,KAAK,CAACI,QAAN,CAAeO,MAAf,CAAsBH,QAAtB,EAAgCA,QAAQ,GAAG,CAA3C,CAAhB;;AACA,UAAMI,QAAQ,mCAAQZ,KAAR;AAAeI,QAAAA,QAAQ,qBAAMM,OAAN;AAAvB,QAAd;;AACA,aAAOE,QAAP;;AAED,SAAK,uBAAL;AACC,UAAMC,SAAS,GAAGb,KAAK,CAACO,cAAN,CAAqBE,OAArB,CAA6BR,MAAM,CAACI,MAApC,CAAlB;AACA,UAAMS,WAAW,GAAGd,KAAK,CAACe,mBAAN,CAA0BJ,MAA1B,CACnBE,SADmB,EAEnBA,SAAS,GAAG,CAFO,CAApB;;AAIA,UAAMG,SAAS,mCAAQhB,KAAR;AAAee,QAAAA,mBAAmB,qBAAMD,WAAN;AAAlC,QAAf;;AACA,aAAOE,SAAP;;AAED;AACC,aAAOhB,KAAP;AAjCF;AAmCA;;AACD,IAAMiB,YAAY,GAAG,KAArB;;AACA,SAASC,KAAT,GAA6C;AAAA,MAA9BlB,KAA8B,uEAAtBiB,YAAsB;AAAA,MAARhB,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACC,aAAO,IAAP;;AACD;AACC,aAAOF,KAAP;AAJF;AAMA;;AACD,IAAMmB,SAAS,GAAG,IAAlB;;AACA,SAASC,WAAT,GAAgD;AAAA,MAA3BpB,KAA2B,uEAAnBmB,SAAmB;AAAA,MAARlB,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,gBAAL;AACC,aAAOD,MAAM,CAACoB,EAAd;;AACD;AACC,aAAOrB,KAAP;AAJF;AAMA;;AACD,IAAMsB,YAAY,GAAG,EAArB;;AACA,SAASC,KAAT,GAA6C;AAAA,MAA9BvB,KAA8B,uEAAtBsB,YAAsB;AAAA,MAARrB,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,cAAL;AACC,aAAOD,MAAM,CAACuB,KAAd;;AACD,SAAK,aAAL;AACC,aAAOvB,MAAM,CAACwB,IAAd;;AAED;AACC,aAAOzB,KAAP;AAPF;AASA;;AAED,eAAeH,eAAe,CAAC;AAAEE,EAAAA,IAAI,EAAJA,IAAF;AAAQmB,EAAAA,KAAK,EAALA,KAAR;AAAeE,EAAAA,WAAW,EAAXA,WAAf;AAA4BG,EAAAA,KAAK,EAALA;AAA5B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\n\nconst initialUser = {};\nfunction user(state = initialUser, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_USER_INFO\":\n\t\t\treturn action.user;\n\t\tcase \"ADD_SAVED_LIST\":\n\t\t\tconst newList = {\n\t\t\t\t...state,\n\t\t\t\tfav_list: [...state.fav_list, action.roomId],\n\t\t\t};\n\t\t\treturn newList;\n\n\t\tcase \"ADD_COMPLETED_LIST\":\n\t\t\tconst newList1 = {\n\t\t\t\t...state,\n\t\t\t\tcompleted_list: [...state.completed_list, action.roomId],\n\t\t\t};\n\t\t\treturn newList1;\n\n\t\tcase \"DELETE_FROM_SAVED\":\n\t\t\tconst indexSav = state.fav_list.indexOf(action.roomId);\n\t\t\tconst spliced = state.fav_list.splice(indexSav, indexSav + 1);\n\t\t\tconst newState = { ...state, fav_list: [...spliced] };\n\t\t\treturn newState;\n\n\t\tcase \"DELETE_FROM_COMPLETED\":\n\t\t\tconst indexComp = state.completed_list.indexOf(action.roomId);\n\t\t\tconst splicedComp = state.completed_list_list.splice(\n\t\t\t\tindexComp,\n\t\t\t\tindexComp + 1\n\t\t\t);\n\t\t\tconst newState1 = { ...state, completed_list_list: [...splicedComp] };\n\t\t\treturn newState1;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialLogin = false;\nfunction login(state = initialLogin, action) {\n\tswitch (action.type) {\n\t\tcase \"SET_LOGIN_TRUE\":\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialId = null;\nfunction selected_id(state = initialId, action) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_ROOM_ID\":\n\t\t\treturn action.id;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nconst initialRooms = [];\nfunction rooms(state = initialRooms, action) {\n\tswitch (action.type) {\n\t\tcase \"SELECT_GENRE\":\n\t\t\treturn action.genre;\n\t\tcase \"FETCH_ROOMS\":\n\t\t\treturn action.list;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default combineReducers({ user, login, selected_id, rooms });\n"]},"metadata":{},"sourceType":"module"}