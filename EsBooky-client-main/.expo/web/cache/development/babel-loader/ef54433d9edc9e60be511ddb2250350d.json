{"ast":null,"code":"import { getRooms, checkCredentials } from \"./../../apiService\";\nexport var select_id = function select_id(id) {\n  return {\n    type: \"SELECT_ROOM_ID\",\n    id: id\n  };\n};\nexport var select_genre = function select_genre(genre) {\n  return {\n    type: \"SELECT_GENRE\",\n    genre: genre\n  };\n};\nexport var fetch_rooms = function fetch_rooms() {\n  return function (dispatch) {\n    getRooms().then(function (rooms) {\n      return dispatch({\n        type: \"FETCH_ROOMS\",\n        list: rooms\n      });\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var add_saved_list = function add_saved_list(roomId) {\n  return {\n    type: \"ADD_SAVED_LIST\",\n    roomId: roomId\n  };\n};\nexport var add_completed_list = function add_completed_list(roomId) {\n  return {\n    type: \"ADD_COMPLETED_LIST\",\n    roomId: roomId\n  };\n};\nexport var delete_from_saved = function delete_from_saved(roomId) {\n  return {\n    type: \"DELETE_FROM_SAVED\",\n    roomId: roomId\n  };\n};\nexport var delete_from_completed = function delete_from_completed(roomId) {\n  return {\n    type: \"DELETE_FROM_COMPLETED\",\n    roomId: roomId\n  };\n};\nexport var set_login_true = function set_login_true() {\n  return {\n    type: \"SET_LOGIN_TRUE\"\n  };\n};\nexport var set_user_info = function set_user_info(email, pass) {\n  return function (dispatch) {\n    checkCredentials(email).then(function (user) {\n      if (user && user.password === pass) {\n        dispatch({\n          type: \"SET_LOGIN_TRUE\"\n        });\n        dispatch({\n          type: \"SET_USER_INFO\",\n          user: user\n        });\n      } else {\n        dispatch({\n          type: \"WRONG_CREDENTIALS\"\n        });\n      }\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var set_users = function set_users() {\n  return function (dispatch) {};\n};","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/actions.js"],"names":["getRooms","checkCredentials","select_id","id","type","select_genre","genre","fetch_rooms","dispatch","then","rooms","list","catch","e","console","log","add_saved_list","roomId","add_completed_list","delete_from_saved","delete_from_completed","set_login_true","set_user_info","email","pass","user","password","set_users"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,gBAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA,SAAK;AAC/BC,IAAAA,IAAI,EAAE,gBADyB;AAE/BD,IAAAA,EAAE,EAAFA;AAF+B,GAAL;AAAA,CAApB;AAIP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAK;AACrCF,IAAAA,IAAI,EAAE,cAD+B;AAErCE,IAAAA,KAAK,EAALA;AAFqC,GAAL;AAAA,CAA1B;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAChC,SAAO,UAAAC,QAAQ,EAAI;AAClBR,IAAAA,QAAQ,GACNS,IADF,CACO,UAAAC,KAAK;AAAA,aACVF,QAAQ,CAAC;AACRJ,QAAAA,IAAI,EAAE,aADE;AAERO,QAAAA,IAAI,EAAED;AAFE,OAAD,CADE;AAAA,KADZ,EAOEE,KAPF,CAOQ,UAAAC,CAAC;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,KAPT;AAQA,GATD;AAUA,CAXM;AAaP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM;AAAA,SAAK;AACxCb,IAAAA,IAAI,EAAE,gBADkC;AAExCa,IAAAA,MAAM,EAANA;AAFwC,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,MAAM;AAAA,SAAK;AAC5Cb,IAAAA,IAAI,EAAE,oBADsC;AAE5Ca,IAAAA,MAAM,EAANA;AAF4C,GAAL;AAAA,CAAjC;AAKP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAF,MAAM;AAAA,SAAK;AAC3Cb,IAAAA,IAAI,EAAE,mBADqC;AAE3Ca,IAAAA,MAAM,EAANA;AAF2C,GAAL;AAAA,CAAhC;AAIP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAH,MAAM;AAAA,SAAK;AAC/Cb,IAAAA,IAAI,EAAE,uBADyC;AAE/Ca,IAAAA,MAAM,EAANA;AAF+C,GAAL;AAAA,CAApC;AAKP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACpCjB,IAAAA,IAAI,EAAE;AAD8B,GAAP;AAAA,CAAvB;AAIP,OAAO,IAAMkB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7C,SAAO,UAAAhB,QAAQ,EAAI;AAClBP,IAAAA,gBAAgB,CAACsB,KAAD,CAAhB,CACEd,IADF,CACO,UAAAgB,IAAI,EAAI;AACb,UAAIA,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBF,IAA9B,EAAoC;AACnChB,QAAAA,QAAQ,CAAC;AACRJ,UAAAA,IAAI,EAAE;AADE,SAAD,CAAR;AAGAI,QAAAA,QAAQ,CAAC;AACRJ,UAAAA,IAAI,EAAE,eADE;AAERqB,UAAAA,IAAI,EAAJA;AAFQ,SAAD,CAAR;AAIA,OARD,MAQO;AACNjB,QAAAA,QAAQ,CAAC;AACRJ,UAAAA,IAAI,EAAE;AADE,SAAD,CAAR;AAGA;AACD,KAfF,EAgBEQ,KAhBF,CAgBQ,UAAAC,CAAC;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,KAhBT;AAiBA,GAlBD;AAmBA,CApBM;AAsBP,OAAO,IAAMc,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC9B,SAAO,UAAAnB,QAAQ,EAAI,CAAE,CAArB;AACA,CAFM","sourcesContent":["import { getRooms, checkCredentials } from \"./../../apiService\";\n\nexport const select_id = id => ({\n\ttype: \"SELECT_ROOM_ID\",\n\tid,\n});\nexport const select_genre = genre => ({\n\ttype: \"SELECT_GENRE\",\n\tgenre,\n});\n\nexport const fetch_rooms = () => {\n\treturn dispatch => {\n\t\tgetRooms()\n\t\t\t.then(rooms =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"FETCH_ROOMS\",\n\t\t\t\t\tlist: rooms,\n\t\t\t\t})\n\t\t\t)\n\t\t\t.catch(e => console.log(e));\n\t};\n};\n\nexport const add_saved_list = roomId => ({\n\ttype: \"ADD_SAVED_LIST\",\n\troomId,\n});\n\nexport const add_completed_list = roomId => ({\n\ttype: \"ADD_COMPLETED_LIST\",\n\troomId,\n});\n\nexport const delete_from_saved = roomId => ({\n\ttype: \"DELETE_FROM_SAVED\",\n\troomId,\n});\nexport const delete_from_completed = roomId => ({\n\ttype: \"DELETE_FROM_COMPLETED\",\n\troomId,\n});\n\nexport const set_login_true = () => ({\n\ttype: \"SET_LOGIN_TRUE\",\n});\n\nexport const set_user_info = (email, pass) => {\n\treturn dispatch => {\n\t\tcheckCredentials(email)\n\t\t\t.then(user => {\n\t\t\t\tif (user && user.password === pass) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"SET_LOGIN_TRUE\",\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"SET_USER_INFO\",\n\t\t\t\t\t\tuser,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"WRONG_CREDENTIALS\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => console.log(e));\n\t};\n};\n\nexport const set_users = () => {\n\treturn dispatch => {};\n};\n"]},"metadata":{},"sourceType":"module"}