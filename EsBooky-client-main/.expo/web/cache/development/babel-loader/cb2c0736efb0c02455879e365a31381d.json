{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = \"http://192.168.1.136:3000/\";\nexport var getRooms = function getRooms() {\n  return _regeneratorRuntime.async(function getRooms$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", fetch(baseURL + \"rooms\").then(function (data) {\n            return data.json();\n          }).then(function (topics) {\n            return topics;\n          }).catch(function (err) {\n            return console.log(err);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getGenre = function getGenre(genre) {\n  var res, data;\n  return _regeneratorRuntime.async(function getGenre$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseURL + genre));\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"There is an error with GET: \", _context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var getOne = function getOne(id) {\n  var res, data;\n  return _regeneratorRuntime.async(function getOne$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(baseURL + \"rooms/\" + id));\n\n        case 3:\n          res = _context3.sent;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context3.sent;\n          return _context3.abrupt(\"return\", data);\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"There is an error with GET: \", _context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/apiService.js"],"names":["baseURL","getRooms","fetch","then","data","json","topics","catch","err","console","log","getGenre","genre","res","getOne","id"],"mappings":";AAAA,IAAMA,OAAO,GAAG,4BAAhB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2CAChBC,KAAK,CAACF,OAAO,GAAG,OAAX,CAAL,CACLG,IADK,CACA,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,WADJ,EAELF,IAFK,CAEA,UAAAG,MAAM;AAAA,mBAAIA,MAAJ;AAAA,WAFN,EAGLC,KAHK,CAGC,UAAAC,GAAG;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,WAHJ,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAMP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJV,KAAK,CAACF,OAAO,GAAGY,KAAX,CAFD;;AAAA;AAEhBC,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACR,IAAJ,EAHG;;AAAA;AAGhBD,UAAAA,IAHgB;AAAA,4CAIfA,IAJe;;AAAA;AAAA;AAAA;AAMtBK,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAUP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFb,KAAK,CAACF,OAAO,GAAG,QAAV,GAAqBe,EAAtB,CAFH;;AAAA;AAEdF,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACR,IAAJ,EAHC;;AAAA;AAGdD,UAAAA,IAHc;AAAA,4CAIbA,IAJa;;AAAA;AAAA;AAAA;AAMpBK,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["const baseURL = \"http://192.168.1.136:3000/\";\n\nexport const getRooms = async () => {\n\treturn fetch(baseURL + \"rooms\")\n\t\t.then(data => data.json())\n\t\t.then(topics => topics)\n\t\t.catch(err => console.log(err));\n};\nexport const getGenre = async genre => {\n\ttry {\n\t\tconst res = await fetch(baseURL + genre);\n\t\tconst data = await res.json();\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.log(\"There is an error with GET: \", e);\n\t}\n};\n\nexport const getOne = async id => {\n\ttry {\n\t\tconst res = await fetch(baseURL + \"rooms/\" + id);\n\t\tconst data = await res.json();\n\t\treturn data;\n\t} catch (e) {\n\t\tconsole.log(\"There is an error with GET: \", e);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}