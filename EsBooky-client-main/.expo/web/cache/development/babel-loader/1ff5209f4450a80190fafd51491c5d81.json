{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { SearchBar } from \"react-native-elements\";\nimport { select_id, select_genre, fetch_rooms } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GlobalTitles from \"../components/global-titles\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { getRooms, getGenre } from \"../../apiService\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nvar Stack = createStackNavigator();\nvar TITLES = [\"Let's find your next adventure ü§üüèº\", \"Are you ready for the action? üïµüèΩ \", \"Find the best escapes in town üîùüîù\"];\nvar mockROOMS = [{}];\nexport default function Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\n\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      genreFilter = _useState2[0],\n      setGenreFilter = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rooms = _useState4[0],\n      setRooms = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filteredRooms = _useState6[0],\n      setFilteredRooms = _useState6[1];\n\n  var allRooms = [{\n    name: \"MOCK ROOM\"\n  }];\n  useEffect(function () {\n    getRooms().then(function (rooms) {\n      return setRooms(rooms);\n    });\n    dispatch(fetch_rooms(rooms));\n  }, []);\n\n  var selectRoomHandler = function selectRoomHandler(id) {\n    dispatch(select_id(id));\n    navigation.navigate(\"roomDetails\");\n  };\n\n  var handleFilterChange = function handleFilterChange() {\n    console.log(\"Entering handle filter change all\");\n\n    if (genreFilter !== \"All\") {\n      setFilteredRooms(rooms.filter(function (room) {\n        return room.genres.includes(genre);\n      }));\n      console.log(filteredRooms);\n    } else {\n      setFilteredRooms();\n    }\n  };\n\n  var selectGenreHandler = function selectGenreHandler(genre) {\n    console.log(\"Entering selecteGenre Handler\");\n\n    if (genre === genreFilter) {\n      setGenreFilter(\"All\");\n    } else {\n      setGenreFilter(genre);\n    }\n\n    handleFilterChange();\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.marginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, React.createElement(Location, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), React.createElement(GlobalTitles, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.genreMenuContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(GenreMenu, {\n    handler: selectGenreHandler,\n    genreSelected: genreFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      height: \"100%\",\n      width: \"100%\",\n      marginRight: \"3%\",\n      marginLeft: \"1%\"\n    },\n    showsVerticalScrollIndicator: false,\n    bounces: false,\n    data: filteredRooms ? filteredRooms : rooms,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return selectRoomHandler(item._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 8\n        }\n      }, React.createElement(RoomElementHome, {\n        room: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: {\n      marginVertical: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }\n  }, React.createElement(Button, {\n    title: \"Back to top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  })))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  marginContainer: {\n    marginRight: \"3%\",\n    marginLeft: \"3%\",\n    marginTop: \"1%\",\n    height: \"100%\"\n  },\n  genreMenuContainer: {\n    marginHorizontal: \"3%\",\n    marginVertical: \"3%\"\n  },\n  pressed: {\n    color: \"#FF267C\"\n  },\n  clean: {\n    color: \"#828282\"\n  }\n});","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/screens/home.jsx"],"names":["StatusBar","React","useEffect","useState","SearchBar","select_id","select_genre","fetch_rooms","useDispatch","useSelector","GlobalTitles","GenreMenu","Location","RoomElementHome","createStackNavigator","getRooms","getGenre","ScrollView","Stack","TITLES","mockROOMS","Home","navigation","dispatch","title","Math","round","random","length","genreFilter","setGenreFilter","rooms","setRooms","filteredRooms","setFilteredRooms","allRooms","name","then","selectRoomHandler","id","navigate","handleFilterChange","console","log","filter","room","genres","includes","genre","selectGenreHandler","styles","container","marginContainer","genreMenuContainer","height","width","marginRight","marginLeft","item","_id","marginVertical","StyleSheet","create","flex","backgroundColor","marginTop","marginHorizontal","pressed","color","clean"],"mappings":";;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAWA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,YAAP;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,eAAP;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,SAASC,QAAT,EAAmBC,QAAnB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAEA,IAAMK,MAAM,GAAG,CACd,qCADc,EAEd,qCAFc,EAGd,oCAHc,CAAf;AAWA,IAAMC,SAAS,GAAG,CAAC,EAAD,CAAlB;AAEA,eAAe,SAASC,IAAT,OAA8B;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5C,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,KAAK,GAAGL,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,MAAM,CAACS,MAAP,GAAgB,CAAjC,CAAX,CAAD,CAApB;;AACA,kBAAsCzB,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAO0B,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA0B3B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO4B,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA0C7B,QAAQ,EAAlD;AAAA;AAAA,MAAO8B,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAjB;AAEAlC,EAAAA,SAAS,CAAC,YAAM;AACfa,IAAAA,QAAQ,GAAGsB,IAAX,CAAgB,UAAAN,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KAArB;AACAR,IAAAA,QAAQ,CAAChB,WAAW,CAACwB,KAAD,CAAZ,CAAR;AACA,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,EAAE,EAAI;AAC/BhB,IAAAA,QAAQ,CAAClB,SAAS,CAACkC,EAAD,CAAV,CAAR;AACAjB,IAAAA,UAAU,CAACkB,QAAX,CAAoB,aAApB;AACA,GAHD;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AACA,QAAId,WAAW,KAAK,KAApB,EAA2B;AAC1BK,MAAAA,gBAAgB,CAACH,KAAK,CAACa,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqBC,KAArB,CAAJ;AAAA,OAAjB,CAAD,CAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACA,KAHD,MAGO;AACNC,MAAAA,gBAAgB;AAChB;AACD,GARD;;AAUA,MAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,KAAK,EAAI;AACnCN,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,QAAIK,KAAK,KAAKnB,WAAd,EAA2B;AAC1BC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,KAFD,MAEO;AACNA,MAAAA,cAAc,CAACkB,KAAD,CAAd;AACA;;AACDP,IAAAA,kBAAkB;AAClB,GARD;;AAUA,SACC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAES,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE5B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAWC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACG,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEJ,kBAApB;AAAwC,IAAA,aAAa,EAAEpB,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAXD,EAcC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,QAAD;AACC,IAAA,KAAK,EAAE;AACNyB,MAAAA,MAAM,EAAE,MADF;AAENC,MAAAA,KAAK,EAAE,MAFD;AAGNC,MAAAA,WAAW,EAAE,IAHP;AAINC,MAAAA,UAAU,EAAE;AAJN,KADR;AAOC,IAAA,4BAA4B,EAAE,KAP/B;AAQC,IAAA,OAAO,EAAE,KARV;AASC,IAAA,IAAI,EAAExB,aAAa,GAAGA,aAAH,GAAmBF,KATvC;AAUC,IAAA,UAAU,EAAE;AAAA,UAAG2B,IAAH,SAAGA,IAAH;AAAA,aACX,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMpB,iBAAiB,CAACoB,IAAI,CAACC,GAAN,CAAvB;AAAA,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADW;AAAA,KAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAqBC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,aADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CArBD,CAdD,CADD,EA8CC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CD,CADD;AAkDA;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAChCX,EAAAA,SAAS,EAAE;AACVY,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE;AAFP,GADqB;AAKhCZ,EAAAA,eAAe,EAAE;AAChBI,IAAAA,WAAW,EAAE,IADG;AAEhBC,IAAAA,UAAU,EAAE,IAFI;AAGhBQ,IAAAA,SAAS,EAAE,IAHK;AAIhBX,IAAAA,MAAM,EAAE;AAJQ,GALe;AAWhCD,EAAAA,kBAAkB,EAAE;AACnBa,IAAAA,gBAAgB,EAAE,IADC;AAEnBN,IAAAA,cAAc,EAAE;AAFG,GAXY;AAehCO,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAfuB;AAgBhCC,EAAAA,KAAK,EAAE;AAAED,IAAAA,KAAK,EAAE;AAAT;AAhByB,CAAlB,CAAf","sourcesContent":["// import 'react-native-gesture-handler';\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n\tStyleSheet,\n\tText,\n\tView,\n\tSafeAreaView,\n\tFlatList,\n\tTouchableOpacity,\n\tButton,\n} from \"react-native\";\n\nimport { SearchBar } from \"react-native-elements\";\n\nimport { select_id, select_genre, fetch_rooms } from \"../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport GlobalTitles from \"../components/global-titles\";\n// import SearchBar from \"../components/searchbar\";\nimport GenreMenu from \"../components/genre-menu\";\nimport Location from \"../components/location\";\nimport RoomElementHome from \"../components/roomElementHome\";\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n// API Imports\nimport { getRooms, getGenre } from \"../../apiService\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst Stack = createStackNavigator();\n\nconst TITLES = [\n\t\"Let's find your next adventure ü§üüèº\",\n\t\"Are you ready for the action? üïµüèΩ \",\n\t\"Find the best escapes in town üîùüîù\",\n];\n//TODO: ADD MORE TITLES\n//TODO: IMPLEMENT SEARCHBAR\n//TODO: HIDE SEARCH BAR ON SCROLL\n//TODO: SCROLL BACK UP WITH BUTTON (IMPLEMENTED BUT CRASHES)\n//TODO: TITLE RE-RENDERING ON GENRE CHANGE\n\nconst mockROOMS = [{}];\n\nexport default function Home({ navigation }) {\n\tconst dispatch = useDispatch();\n\tconst title = TITLES[Math.round(Math.random() * (TITLES.length - 1))];\n\tconst [genreFilter, setGenreFilter] = useState(\"All\");\n\tconst [rooms, setRooms] = useState([]);\n\tconst [filteredRooms, setFilteredRooms] = useState();\n\n\tconst allRooms = [{ name: \"MOCK ROOM\" }];\n\n\tuseEffect(() => {\n\t\tgetRooms().then(rooms => setRooms(rooms));\n\t\tdispatch(fetch_rooms(rooms));\n\t}, []);\n\n\tconst selectRoomHandler = id => {\n\t\tdispatch(select_id(id));\n\t\tnavigation.navigate(\"roomDetails\");\n\t};\n\n\tconst handleFilterChange = () => {\n\t\tconsole.log(\"Entering handle filter change all\");\n\t\tif (genreFilter !== \"All\") {\n\t\t\tsetFilteredRooms(rooms.filter(room => room.genres.includes(genre)));\n\t\t\tconsole.log(filteredRooms);\n\t\t} else {\n\t\t\tsetFilteredRooms();\n\t\t}\n\t};\n\n\tconst selectGenreHandler = genre => {\n\t\tconsole.log(\"Entering selecteGenre Handler\");\n\t\tif (genre === genreFilter) {\n\t\t\tsetGenreFilter(\"All\");\n\t\t} else {\n\t\t\tsetGenreFilter(genre);\n\t\t}\n\t\thandleFilterChange();\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={styles.marginContainer}>\n\t\t\t\t<Location />\n\t\t\t\t<GlobalTitles title={title} />\n\t\t\t\t{/* <SearchBar handleChange={handleChange} /> */}\n\t\t\t\t{/* <SearchBar\n\t\t\t\t\tplaceholder=\"Try typing a name...\"\n\t\t\t\t\tlightTheme\n\t\t\t\t\tround\n\t\t\t\t\tonChangeText={search => updateSearch(search)}\n\t\t\t\t\tautoCorrect={false}\n\t\t\t\t/> */}\n\t\t\t\t<View style={styles.genreMenuContainer}>\n\t\t\t\t\t<GenreMenu handler={selectGenreHandler} genreSelected={genreFilter} />\n\t\t\t\t</View>\n\t\t\t\t<ScrollView\n\t\t\t\t// ref={c => {\n\t\t\t\t// \tthis.scroll = c;\n\t\t\t\t// }}\n\t\t\t\t>\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\tmarginRight: \"3%\",\n\t\t\t\t\t\t\tmarginLeft: \"1%\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\t\t\tbounces={false}\n\t\t\t\t\t\tdata={filteredRooms ? filteredRooms : rooms}\n\t\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t\t<TouchableOpacity onPress={() => selectRoomHandler(item._id)}>\n\t\t\t\t\t\t\t\t<RoomElementHome room={item} />\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<View style={{ marginVertical: 10 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle=\"Back to top\"\n\t\t\t\t\t\t\t// onPress={() =>\n\t\t\t\t\t\t\t// \tthis.scroll.scrollTo({ x: 0, y: 0, animated: true })\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tmarginContainer: {\n\t\tmarginRight: \"3%\",\n\t\tmarginLeft: \"3%\",\n\t\tmarginTop: \"1%\",\n\t\theight: \"100%\",\n\t},\n\tgenreMenuContainer: {\n\t\tmarginHorizontal: \"3%\",\n\t\tmarginVertical: \"3%\",\n\t},\n\tpressed: { color: \"#FF267C\" },\n\tclean: { color: \"#828282\" },\n});\n"]},"metadata":{},"sourceType":"module"}