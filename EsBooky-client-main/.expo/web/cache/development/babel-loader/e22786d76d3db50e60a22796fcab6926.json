{"ast":null,"code":"import { getRooms, checkCredentials, postToFavs, postToCompleted, deleteFromFavs, deleteFromCompleted, postNewSquad, getSquadInfo, getUserSquad, addUserToSquad, postToSquadCompleted, deleteFromSquadCompleted, postToSquadFavs, deleteFromSquadFavs, deleteUserFromSquad } from \"./../../apiService\";\nexport var select_id = function select_id(id) {\n  return {\n    type: \"SELECT_ROOM_ID\",\n    id: id\n  };\n};\nexport var select_genre = function select_genre(genre) {\n  return {\n    type: \"SELECT_GENRE\",\n    genre: genre\n  };\n};\nexport var fetch_rooms = function fetch_rooms() {\n  return function (dispatch) {\n    getRooms().then(function (rooms) {\n      return dispatch({\n        type: \"FETCH_ROOMS\",\n        list: rooms\n      });\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var add_saved_list = function add_saved_list(roomId, userId) {\n  return function (dispatch) {\n    postToFavs(roomId, userId).then(function () {\n      dispatch({\n        type: \"ADD_SAVED_LIST\",\n        roomId: roomId\n      });\n    }).catch(function (e) {\n      return console.log(e, \"Error with add_saved_list\");\n    });\n  };\n};\nexport var add_completed_list = function add_completed_list(roomId, userId) {\n  return function (dispatch) {\n    postToCompleted(roomId, userId).then(function () {\n      deleteFromFavs(roomId, userId).then(function () {\n        console.log(\"Getting here\");\n        dispatch({\n          type: \"ADD_COMPLETED_LIST\",\n          roomId: roomId\n        });\n        dispatch({\n          type: \"DELETE_FROM_SAVED\",\n          roomId: roomId\n        });\n      });\n    }).catch(function (e) {\n      return console.log(e, \"Error with add_completed_list\");\n    });\n  };\n};\nexport var delete_from_saved = function delete_from_saved(roomId, userId) {\n  return function (dispatch) {\n    deleteFromFavs(roomId, userId).then(function () {\n      dispatch({\n        type: \"DELETE_FROM_SAVED\",\n        roomId: roomId\n      });\n    }).catch(function (e) {\n      return console.log(e, \"Error with delete_from_saved\");\n    });\n  };\n};\nexport var delete_from_completed = function delete_from_completed(roomId, userId) {\n  return function (dispatch) {\n    deleteFromCompleted(roomId, userId).then(function () {\n      dispatch({\n        type: \"DELETE_FROM_COMPLETED\",\n        roomId: roomId\n      });\n    }).catch(function (e) {\n      return console.log(e, \"Error with delete_from_saved\");\n    });\n  };\n};\nexport var set_login_true = function set_login_true() {\n  return {\n    type: \"SET_LOGIN_TRUE\"\n  };\n};\nexport var set_user_info = function set_user_info(email, pass) {\n  return function (dispatch) {\n    checkCredentials(email).then(function (user) {\n      if (user && user.password === pass) {\n        dispatch({\n          type: \"SET_LOGIN_TRUE\"\n        });\n        dispatch({\n          type: \"SET_USER_INFO\",\n          user: user\n        });\n      } else {\n        dispatch({\n          type: \"WRONG_CREDENTIALS\"\n        });\n      }\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var get_user_squad = function get_user_squad(userId) {\n  return function (dispatch) {\n    getUserSquad(userId).then(function (squad) {\n      dispatch({\n        type: \"SET_SQUAD_INFO\",\n        squad: squad\n      });\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var delete_user_from_squad = function delete_user_from_squad(squadID, userId) {\n  return function (dispatch) {\n    deleteUserFromSquad(squadID, userId).then(function () {\n      dispatch({\n        type: \"DELETE_USER_FROM_SQUAD\",\n        userId: userId\n      });\n    }).catch(function (e) {\n      return console.log(e, \"Error with delete_user_from_squad\");\n    });\n  };\n};\nexport var add_user_to_squad = function add_user_to_squad(squadId, userId) {\n  return function (dispatch) {\n    addUserToSquad(squadId, userId).then(function () {\n      getUserSquad(userId).then(function (squad) {\n        dispatch({\n          type: \"SET_SQUAD_INFO\",\n          squad: squad\n        });\n      }).catch(function (e) {\n        return console.log(\"There's an error with add_user_to_squad\", e);\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mateorubinstein/Desktop/esbooky-full-stack.nosync/EsBooky-client/src/redux/actions.js"],"names":["getRooms","checkCredentials","postToFavs","postToCompleted","deleteFromFavs","deleteFromCompleted","postNewSquad","getSquadInfo","getUserSquad","addUserToSquad","postToSquadCompleted","deleteFromSquadCompleted","postToSquadFavs","deleteFromSquadFavs","deleteUserFromSquad","select_id","id","type","select_genre","genre","fetch_rooms","dispatch","then","rooms","list","catch","e","console","log","add_saved_list","roomId","userId","add_completed_list","delete_from_saved","delete_from_completed","set_login_true","set_user_info","email","pass","user","password","get_user_squad","squad","delete_user_from_squad","squadID","add_user_to_squad","squadId"],"mappings":"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","sourcesContent":["import {\n\tgetRooms,\n\tcheckCredentials,\n\tpostToFavs,\n\tpostToCompleted,\n\tdeleteFromFavs,\n\tdeleteFromCompleted,\n\tpostNewSquad,\n\tgetSquadInfo,\n\tgetUserSquad,\n\taddUserToSquad,\n\tpostToSquadCompleted,\n\tdeleteFromSquadCompleted,\n\tpostToSquadFavs,\n\tdeleteFromSquadFavs,\n\tdeleteUserFromSquad,\n} from \"./../../apiService\";\n\nexport const select_id = id => ({\n\ttype: \"SELECT_ROOM_ID\",\n\tid,\n});\nexport const select_genre = genre => ({\n\ttype: \"SELECT_GENRE\",\n\tgenre,\n});\n\nexport const fetch_rooms = () => {\n\treturn dispatch => {\n\t\tgetRooms()\n\t\t\t.then(rooms =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"FETCH_ROOMS\",\n\t\t\t\t\tlist: rooms,\n\t\t\t\t})\n\t\t\t)\n\t\t\t.catch(e => console.log(e));\n\t};\n};\n\nexport const add_saved_list = (roomId, userId) => {\n\treturn dispatch => {\n\t\tpostToFavs(roomId, userId)\n\t\t\t.then(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"ADD_SAVED_LIST\",\n\t\t\t\t\troomId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e, \"Error with add_saved_list\"));\n\t};\n};\n\nexport const add_completed_list = (roomId, userId) => {\n\treturn dispatch => {\n\t\tpostToCompleted(roomId, userId)\n\t\t\t.then(() => {\n\t\t\t\tdeleteFromFavs(roomId, userId).then(() => {\n\t\t\t\t\tconsole.log(\"Getting here\");\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"ADD_COMPLETED_LIST\",\n\t\t\t\t\t\troomId,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"DELETE_FROM_SAVED\",\n\t\t\t\t\t\troomId,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e, \"Error with add_completed_list\"));\n\t};\n};\n\nexport const delete_from_saved = (roomId, userId) => {\n\treturn dispatch => {\n\t\tdeleteFromFavs(roomId, userId)\n\t\t\t.then(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"DELETE_FROM_SAVED\",\n\t\t\t\t\troomId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e, \"Error with delete_from_saved\"));\n\t};\n};\nexport const delete_from_completed = (roomId, userId) => {\n\treturn dispatch => {\n\t\tdeleteFromCompleted(roomId, userId)\n\t\t\t.then(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"DELETE_FROM_COMPLETED\",\n\t\t\t\t\troomId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e, \"Error with delete_from_saved\"));\n\t};\n};\n\nexport const set_login_true = () => ({\n\ttype: \"SET_LOGIN_TRUE\",\n});\n\nexport const set_user_info = (email, pass) => {\n\treturn dispatch => {\n\t\tcheckCredentials(email)\n\t\t\t.then(user => {\n\t\t\t\tif (user && user.password === pass) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"SET_LOGIN_TRUE\",\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"SET_USER_INFO\",\n\t\t\t\t\t\tuser,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"WRONG_CREDENTIALS\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => console.log(e));\n\t};\n};\n\nexport const get_user_squad = userId => {\n\treturn dispatch => {\n\t\tgetUserSquad(userId)\n\t\t\t.then(squad => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SET_SQUAD_INFO\",\n\t\t\t\t\tsquad,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e));\n\t};\n};\n\nexport const delete_user_from_squad = (squadID, userId) => {\n\treturn dispatch => {\n\t\tdeleteUserFromSquad(squadID, userId)\n\t\t\t.then(() => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"DELETE_USER_FROM_SQUAD\",\n\t\t\t\t\tuserId,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => console.log(e, \"Error with delete_user_from_squad\"));\n\t};\n};\n\nexport const add_user_to_squad = (squadId, userId) => {\n\treturn dispatch => {\n\t\taddUserToSquad(squadId, userId).then(() => {\n\t\t\tgetUserSquad(userId)\n\t\t\t\t.then(squad => {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"SET_SQUAD_INFO\",\n\t\t\t\t\t\tsquad,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(e => console.log(\"There's an error with add_user_to_squad\", e));\n\t\t});\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}